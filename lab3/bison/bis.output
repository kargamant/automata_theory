State 32 conflicts: 1 reduce/reduce
State 39 conflicts: 4 shift/reduce
State 40 conflicts: 4 shift/reduce
State 41 conflicts: 4 shift/reduce
State 42 conflicts: 4 shift/reduce


Grammar

    0 $accept: complex_statement $end

    1 complex_statement: simple_statement ',' complex_statement
    2                  | simple_statement '.'

    3 simple_statement: VAR_TYPE VAR_NAME vars LEFT_ASSIGN expr
    4                 | ARRAY VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN expr
    5                 | assign_expr
    6                 | '@' expr
    7                 | '$' VAR_NAME '[' LITERAL LITERAL ']'
    8                 | '$' VAR_NAME

    9 assign_expr: operand LEFT_ASSIGN assign_expr
   10            | expr RIGHT_ASSIGN assign_expr
   11            | expr

   12 operand: LITERAL
   13        | VAR_NAME
   14        | VAR_NAME '[' LITERAL LITERAL ']'

   15 expr_operand: LITERAL
   16             | VAR_NAME
   17             | VAR_NAME '[' LITERAL LITERAL ']'

   18 expr: expr_operand
   19     | expr '*' expr
   20     | expr '/' expr
   21     | expr '+' expr
   22     | expr '-' expr
   23     | '(' expr ')'

   24 vars: VAR_NAME vars
   25     | VAR_NAME
   26     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '$' (36) 7 8
    '(' (40) 23
    ')' (41) 23
    '*' (42) 19
    '+' (43) 21
    ',' (44) 1
    '-' (45) 22
    '.' (46) 2
    '/' (47) 20
    '@' (64) 6
    '[' (91) 7 14 17
    ']' (93) 7 14 17
    error (256)
    VAR_NAME <str> (258) 3 4 7 8 13 14 16 17 24 25
    LITERAL <num> (259) 7 12 14 15 17
    VAR_TYPE <var_type> (260) 3 4
    ARRAY (261) 4
    LEFT_ASSIGN (262) 3 4 9
    RIGHT_ASSIGN (263) 10


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    expr <num> (22)
        on left: 18 19 20 21 22 23
        on right: 3 4 6 10 11 19 20 21 22 23
    expr_operand <num> (23)
        on left: 15 16 17
        on right: 18
    operand <num> (24)
        on left: 12 13 14
        on right: 9
    complex_statement (25)
        on left: 1 2
        on right: 0 1
    simple_statement (26)
        on left: 3 4 5 6 7 8
        on right: 1 2
    assign_expr (27)
        on left: 9 10 11
        on right: 5 9 10
    vars (28)
        on left: 24 25 26
        on right: 3 24


State 0

    0 $accept: . complex_statement $end

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    VAR_TYPE  shift, and go to state 3
    ARRAY     shift, and go to state 4
    '@'       shift, and go to state 5
    '$'       shift, and go to state 6
    '('       shift, and go to state 7

    expr               go to state 8
    expr_operand       go to state 9
    operand            go to state 10
    complex_statement  go to state 11
    simple_statement   go to state 12
    assign_expr        go to state 13


State 1

   13 operand: VAR_NAME .
   14        | VAR_NAME . '[' LITERAL LITERAL ']'
   16 expr_operand: VAR_NAME .
   17             | VAR_NAME . '[' LITERAL LITERAL ']'

    '['  shift, and go to state 14

    LEFT_ASSIGN  reduce using rule 13 (operand)
    $default     reduce using rule 16 (expr_operand)


State 2

   12 operand: LITERAL .
   15 expr_operand: LITERAL .

    LEFT_ASSIGN  reduce using rule 12 (operand)
    $default     reduce using rule 15 (expr_operand)


State 3

    3 simple_statement: VAR_TYPE . VAR_NAME vars LEFT_ASSIGN expr

    VAR_NAME  shift, and go to state 15


State 4

    4 simple_statement: ARRAY . VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN expr

    VAR_TYPE  shift, and go to state 16


State 5

    6 simple_statement: '@' . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 19
    expr_operand  go to state 9


State 6

    7 simple_statement: '$' . VAR_NAME '[' LITERAL LITERAL ']'
    8                 | '$' . VAR_NAME

    VAR_NAME  shift, and go to state 20


State 7

   23 expr: '(' . expr ')'

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 21
    expr_operand  go to state 9


State 8

   10 assign_expr: expr . RIGHT_ASSIGN assign_expr
   11            | expr .
   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr

    RIGHT_ASSIGN  shift, and go to state 22
    '*'           shift, and go to state 23
    '/'           shift, and go to state 24
    '+'           shift, and go to state 25
    '-'           shift, and go to state 26

    $default  reduce using rule 11 (assign_expr)


State 9

   18 expr: expr_operand .

    $default  reduce using rule 18 (expr)


State 10

    9 assign_expr: operand . LEFT_ASSIGN assign_expr

    LEFT_ASSIGN  shift, and go to state 27


State 11

    0 $accept: complex_statement . $end

    $end  shift, and go to state 28


State 12

    1 complex_statement: simple_statement . ',' complex_statement
    2                  | simple_statement . '.'

    ','  shift, and go to state 29
    '.'  shift, and go to state 30


State 13

    5 simple_statement: assign_expr .

    $default  reduce using rule 5 (simple_statement)


State 14

   14 operand: VAR_NAME '[' . LITERAL LITERAL ']'
   17 expr_operand: VAR_NAME '[' . LITERAL LITERAL ']'

    LITERAL  shift, and go to state 31


State 15

    3 simple_statement: VAR_TYPE VAR_NAME . vars LEFT_ASSIGN expr

    VAR_NAME  shift, and go to state 32

    $default  reduce using rule 26 (vars)

    vars  go to state 33


State 16

    4 simple_statement: ARRAY VAR_TYPE . VAR_TYPE VAR_NAME LEFT_ASSIGN expr

    VAR_TYPE  shift, and go to state 34


State 17

   16 expr_operand: VAR_NAME .
   17             | VAR_NAME . '[' LITERAL LITERAL ']'

    '['  shift, and go to state 35

    $default  reduce using rule 16 (expr_operand)


State 18

   15 expr_operand: LITERAL .

    $default  reduce using rule 15 (expr_operand)


State 19

    6 simple_statement: '@' expr .
   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 6 (simple_statement)


State 20

    7 simple_statement: '$' VAR_NAME . '[' LITERAL LITERAL ']'
    8                 | '$' VAR_NAME .

    '['  shift, and go to state 36

    $default  reduce using rule 8 (simple_statement)


State 21

   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr
   23     | '(' expr . ')'

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    ')'  shift, and go to state 37


State 22

   10 assign_expr: expr RIGHT_ASSIGN . assign_expr

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    expr          go to state 8
    expr_operand  go to state 9
    operand       go to state 10
    assign_expr   go to state 38


State 23

   19 expr: expr '*' . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 39
    expr_operand  go to state 9


State 24

   20 expr: expr '/' . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 40
    expr_operand  go to state 9


State 25

   21 expr: expr '+' . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 41
    expr_operand  go to state 9


State 26

   22 expr: expr '-' . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 42
    expr_operand  go to state 9


State 27

    9 assign_expr: operand LEFT_ASSIGN . assign_expr

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    expr          go to state 8
    expr_operand  go to state 9
    operand       go to state 10
    assign_expr   go to state 43


State 28

    0 $accept: complex_statement $end .

    $default  accept


State 29

    1 complex_statement: simple_statement ',' . complex_statement

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    VAR_TYPE  shift, and go to state 3
    ARRAY     shift, and go to state 4
    '@'       shift, and go to state 5
    '$'       shift, and go to state 6
    '('       shift, and go to state 7

    expr               go to state 8
    expr_operand       go to state 9
    operand            go to state 10
    complex_statement  go to state 44
    simple_statement   go to state 12
    assign_expr        go to state 13


State 30

    2 complex_statement: simple_statement '.' .

    $default  reduce using rule 2 (complex_statement)


State 31

   14 operand: VAR_NAME '[' LITERAL . LITERAL ']'
   17 expr_operand: VAR_NAME '[' LITERAL . LITERAL ']'

    LITERAL  shift, and go to state 45


State 32

   24 vars: VAR_NAME . vars
   25     | VAR_NAME .

    VAR_NAME  shift, and go to state 32

    LEFT_ASSIGN  reduce using rule 25 (vars)
    LEFT_ASSIGN  [reduce using rule 26 (vars)]
    $default     reduce using rule 25 (vars)

    vars  go to state 46


State 33

    3 simple_statement: VAR_TYPE VAR_NAME vars . LEFT_ASSIGN expr

    LEFT_ASSIGN  shift, and go to state 47


State 34

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE . VAR_NAME LEFT_ASSIGN expr

    VAR_NAME  shift, and go to state 48


State 35

   17 expr_operand: VAR_NAME '[' . LITERAL LITERAL ']'

    LITERAL  shift, and go to state 49


State 36

    7 simple_statement: '$' VAR_NAME '[' . LITERAL LITERAL ']'

    LITERAL  shift, and go to state 50


State 37

   23 expr: '(' expr ')' .

    $default  reduce using rule 23 (expr)


State 38

   10 assign_expr: expr RIGHT_ASSIGN assign_expr .

    $default  reduce using rule 10 (assign_expr)


State 39

   19 expr: expr . '*' expr
   19     | expr '*' expr .
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    '*'       [reduce using rule 19 (expr)]
    '/'       [reduce using rule 19 (expr)]
    '+'       [reduce using rule 19 (expr)]
    '-'       [reduce using rule 19 (expr)]
    $default  reduce using rule 19 (expr)


State 40

   19 expr: expr . '*' expr
   20     | expr . '/' expr
   20     | expr '/' expr .
   21     | expr . '+' expr
   22     | expr . '-' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    '*'       [reduce using rule 20 (expr)]
    '/'       [reduce using rule 20 (expr)]
    '+'       [reduce using rule 20 (expr)]
    '-'       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


State 41

   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   21     | expr '+' expr .
   22     | expr . '-' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    '*'       [reduce using rule 21 (expr)]
    '/'       [reduce using rule 21 (expr)]
    '+'       [reduce using rule 21 (expr)]
    '-'       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 42

   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr
   22     | expr '-' expr .

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    '*'       [reduce using rule 22 (expr)]
    '/'       [reduce using rule 22 (expr)]
    '+'       [reduce using rule 22 (expr)]
    '-'       [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


State 43

    9 assign_expr: operand LEFT_ASSIGN assign_expr .

    $default  reduce using rule 9 (assign_expr)


State 44

    1 complex_statement: simple_statement ',' complex_statement .

    $default  reduce using rule 1 (complex_statement)


State 45

   14 operand: VAR_NAME '[' LITERAL LITERAL . ']'
   17 expr_operand: VAR_NAME '[' LITERAL LITERAL . ']'

    ']'  shift, and go to state 51


State 46

   24 vars: VAR_NAME vars .

    $default  reduce using rule 24 (vars)


State 47

    3 simple_statement: VAR_TYPE VAR_NAME vars LEFT_ASSIGN . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 52
    expr_operand  go to state 9


State 48

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE VAR_NAME . LEFT_ASSIGN expr

    LEFT_ASSIGN  shift, and go to state 53


State 49

   17 expr_operand: VAR_NAME '[' LITERAL . LITERAL ']'

    LITERAL  shift, and go to state 54


State 50

    7 simple_statement: '$' VAR_NAME '[' LITERAL . LITERAL ']'

    LITERAL  shift, and go to state 55


State 51

   14 operand: VAR_NAME '[' LITERAL LITERAL ']' .
   17 expr_operand: VAR_NAME '[' LITERAL LITERAL ']' .

    LEFT_ASSIGN  reduce using rule 14 (operand)
    $default     reduce using rule 17 (expr_operand)


State 52

    3 simple_statement: VAR_TYPE VAR_NAME vars LEFT_ASSIGN expr .
   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 3 (simple_statement)


State 53

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN . expr

    VAR_NAME  shift, and go to state 17
    LITERAL   shift, and go to state 18
    '('       shift, and go to state 7

    expr          go to state 56
    expr_operand  go to state 9


State 54

   17 expr_operand: VAR_NAME '[' LITERAL LITERAL . ']'

    ']'  shift, and go to state 57


State 55

    7 simple_statement: '$' VAR_NAME '[' LITERAL LITERAL . ']'

    ']'  shift, and go to state 58


State 56

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN expr .
   19 expr: expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '+' expr
   22     | expr . '-' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 4 (simple_statement)


State 57

   17 expr_operand: VAR_NAME '[' LITERAL LITERAL ']' .

    $default  reduce using rule 17 (expr_operand)


State 58

    7 simple_statement: '$' VAR_NAME '[' LITERAL LITERAL ']' .

    $default  reduce using rule 7 (simple_statement)
