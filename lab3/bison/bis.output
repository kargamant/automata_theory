State 1 conflicts: 4 reduce/reduce
State 2 conflicts: 4 reduce/reduce
State 33 conflicts: 1 reduce/reduce
State 52 conflicts: 4 reduce/reduce


Grammar

    0 $accept: complex_statement $end

    1 complex_statement: simple_statement ',' complex_statement
    2                  | simple_statement '.'

    3 simple_statement: VAR_TYPE VAR_NAME vars LEFT_ASSIGN operand
    4                 | ARRAY VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN operand
    5                 | assign_expr
    6                 | '@' operand
    7                 | '$' VAR_NAME '[' LITERAL LITERAL ']'
    8                 | '$' VAR_NAME

    9 assign_expr: operand LEFT_ASSIGN assign_expr
   10            | operand RIGHT_ASSIGN assign_expr
   11            | operand

   12 operand: numeric_operand
   13        | VAR_NAME
   14        | VAR_NAME '[' LITERAL LITERAL ']'

   15 numeric_operand: LITERAL
   16                | expr

   17 expr_operand: LITERAL
   18             | VAR_NAME
   19             | VAR_NAME '[' LITERAL LITERAL ']'

   20 expr: expr_operand
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '+' expr
   24     | expr '-' expr
   25     | '(' expr ')'

   26 vars: VAR_NAME vars
   27     | VAR_NAME
   28     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '$' (36) 7 8
    '(' (40) 25
    ')' (41) 25
    '*' (42) 21
    '+' (43) 23
    ',' (44) 1
    '-' (45) 24
    '.' (46) 2
    '/' (47) 22
    '@' (64) 6
    '[' (91) 7 14 19
    ']' (93) 7 14 19
    error (256)
    VAR_NAME <str> (258) 3 4 7 8 13 14 18 19 26 27
    LITERAL <num> (259) 7 14 15 17 19
    VAR_TYPE <var_type> (260) 3 4
    ARRAY (261) 4
    LEFT_ASSIGN (262) 3 4 9
    RIGHT_ASSIGN (263) 10


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    operand <num> (22)
        on left: 12 13 14
        on right: 3 4 6 9 10 11
    numeric_operand <num> (23)
        on left: 15 16
        on right: 12
    expr <num> (24)
        on left: 20 21 22 23 24 25
        on right: 16 21 22 23 24 25
    expr_operand <num> (25)
        on left: 17 18 19
        on right: 20
    complex_statement (26)
        on left: 1 2
        on right: 0 1
    simple_statement (27)
        on left: 3 4 5 6 7 8
        on right: 1 2
    assign_expr (28)
        on left: 9 10 11
        on right: 5 9 10
    vars (29)
        on left: 26 27 28
        on right: 3 26


State 0

    0 $accept: . complex_statement $end

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    VAR_TYPE  shift, and go to state 3
    ARRAY     shift, and go to state 4
    '@'       shift, and go to state 5
    '$'       shift, and go to state 6
    '('       shift, and go to state 7

    operand            go to state 8
    numeric_operand    go to state 9
    expr               go to state 10
    expr_operand       go to state 11
    complex_statement  go to state 12
    simple_statement   go to state 13
    assign_expr        go to state 14


State 1

   13 operand: VAR_NAME .
   14        | VAR_NAME . '[' LITERAL LITERAL ']'
   18 expr_operand: VAR_NAME .
   19             | VAR_NAME . '[' LITERAL LITERAL ']'

    '['  shift, and go to state 15

    '+'           reduce using rule 18 (expr_operand)
    '-'           reduce using rule 18 (expr_operand)
    '*'           reduce using rule 18 (expr_operand)
    '/'           reduce using rule 18 (expr_operand)
    LEFT_ASSIGN   reduce using rule 13 (operand)
    LEFT_ASSIGN   [reduce using rule 18 (expr_operand)]
    RIGHT_ASSIGN  reduce using rule 13 (operand)
    RIGHT_ASSIGN  [reduce using rule 18 (expr_operand)]
    ','           reduce using rule 13 (operand)
    ','           [reduce using rule 18 (expr_operand)]
    '.'           reduce using rule 13 (operand)
    '.'           [reduce using rule 18 (expr_operand)]
    $default      reduce using rule 13 (operand)


State 2

   15 numeric_operand: LITERAL .
   17 expr_operand: LITERAL .

    '+'           reduce using rule 17 (expr_operand)
    '-'           reduce using rule 17 (expr_operand)
    '*'           reduce using rule 17 (expr_operand)
    '/'           reduce using rule 17 (expr_operand)
    LEFT_ASSIGN   reduce using rule 15 (numeric_operand)
    LEFT_ASSIGN   [reduce using rule 17 (expr_operand)]
    RIGHT_ASSIGN  reduce using rule 15 (numeric_operand)
    RIGHT_ASSIGN  [reduce using rule 17 (expr_operand)]
    ','           reduce using rule 15 (numeric_operand)
    ','           [reduce using rule 17 (expr_operand)]
    '.'           reduce using rule 15 (numeric_operand)
    '.'           [reduce using rule 17 (expr_operand)]
    $default      reduce using rule 15 (numeric_operand)


State 3

    3 simple_statement: VAR_TYPE . VAR_NAME vars LEFT_ASSIGN operand

    VAR_NAME  shift, and go to state 16


State 4

    4 simple_statement: ARRAY . VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN operand

    VAR_TYPE  shift, and go to state 17


State 5

    6 simple_statement: '@' . operand

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    operand          go to state 18
    numeric_operand  go to state 9
    expr             go to state 10
    expr_operand     go to state 11


State 6

    7 simple_statement: '$' . VAR_NAME '[' LITERAL LITERAL ']'
    8                 | '$' . VAR_NAME

    VAR_NAME  shift, and go to state 19


State 7

   25 expr: '(' . expr ')'

    VAR_NAME  shift, and go to state 20
    LITERAL   shift, and go to state 21
    '('       shift, and go to state 7

    expr          go to state 22
    expr_operand  go to state 11


State 8

    9 assign_expr: operand . LEFT_ASSIGN assign_expr
   10            | operand . RIGHT_ASSIGN assign_expr
   11            | operand .

    LEFT_ASSIGN   shift, and go to state 23
    RIGHT_ASSIGN  shift, and go to state 24

    $default  reduce using rule 11 (assign_expr)


State 9

   12 operand: numeric_operand .

    $default  reduce using rule 12 (operand)


State 10

   16 numeric_operand: expr .
   21 expr: expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '+' expr
   24     | expr . '-' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 16 (numeric_operand)


State 11

   20 expr: expr_operand .

    $default  reduce using rule 20 (expr)


State 12

    0 $accept: complex_statement . $end

    $end  shift, and go to state 29


State 13

    1 complex_statement: simple_statement . ',' complex_statement
    2                  | simple_statement . '.'

    ','  shift, and go to state 30
    '.'  shift, and go to state 31


State 14

    5 simple_statement: assign_expr .

    $default  reduce using rule 5 (simple_statement)


State 15

   14 operand: VAR_NAME '[' . LITERAL LITERAL ']'
   19 expr_operand: VAR_NAME '[' . LITERAL LITERAL ']'

    LITERAL  shift, and go to state 32


State 16

    3 simple_statement: VAR_TYPE VAR_NAME . vars LEFT_ASSIGN operand

    VAR_NAME  shift, and go to state 33

    $default  reduce using rule 28 (vars)

    vars  go to state 34


State 17

    4 simple_statement: ARRAY VAR_TYPE . VAR_TYPE VAR_NAME LEFT_ASSIGN operand

    VAR_TYPE  shift, and go to state 35


State 18

    6 simple_statement: '@' operand .

    $default  reduce using rule 6 (simple_statement)


State 19

    7 simple_statement: '$' VAR_NAME . '[' LITERAL LITERAL ']'
    8                 | '$' VAR_NAME .

    '['  shift, and go to state 36

    $default  reduce using rule 8 (simple_statement)


State 20

   18 expr_operand: VAR_NAME .
   19             | VAR_NAME . '[' LITERAL LITERAL ']'

    '['  shift, and go to state 37

    $default  reduce using rule 18 (expr_operand)


State 21

   17 expr_operand: LITERAL .

    $default  reduce using rule 17 (expr_operand)


State 22

   21 expr: expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | '(' expr . ')'

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    ')'  shift, and go to state 38


State 23

    9 assign_expr: operand LEFT_ASSIGN . assign_expr

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    operand          go to state 8
    numeric_operand  go to state 9
    expr             go to state 10
    expr_operand     go to state 11
    assign_expr      go to state 39


State 24

   10 assign_expr: operand RIGHT_ASSIGN . assign_expr

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    operand          go to state 8
    numeric_operand  go to state 9
    expr             go to state 10
    expr_operand     go to state 11
    assign_expr      go to state 40


State 25

   23 expr: expr '+' . expr

    VAR_NAME  shift, and go to state 20
    LITERAL   shift, and go to state 21
    '('       shift, and go to state 7

    expr          go to state 41
    expr_operand  go to state 11


State 26

   24 expr: expr '-' . expr

    VAR_NAME  shift, and go to state 20
    LITERAL   shift, and go to state 21
    '('       shift, and go to state 7

    expr          go to state 42
    expr_operand  go to state 11


State 27

   21 expr: expr '*' . expr

    VAR_NAME  shift, and go to state 20
    LITERAL   shift, and go to state 21
    '('       shift, and go to state 7

    expr          go to state 43
    expr_operand  go to state 11


State 28

   22 expr: expr '/' . expr

    VAR_NAME  shift, and go to state 20
    LITERAL   shift, and go to state 21
    '('       shift, and go to state 7

    expr          go to state 44
    expr_operand  go to state 11


State 29

    0 $accept: complex_statement $end .

    $default  accept


State 30

    1 complex_statement: simple_statement ',' . complex_statement

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    VAR_TYPE  shift, and go to state 3
    ARRAY     shift, and go to state 4
    '@'       shift, and go to state 5
    '$'       shift, and go to state 6
    '('       shift, and go to state 7

    operand            go to state 8
    numeric_operand    go to state 9
    expr               go to state 10
    expr_operand       go to state 11
    complex_statement  go to state 45
    simple_statement   go to state 13
    assign_expr        go to state 14


State 31

    2 complex_statement: simple_statement '.' .

    $default  reduce using rule 2 (complex_statement)


State 32

   14 operand: VAR_NAME '[' LITERAL . LITERAL ']'
   19 expr_operand: VAR_NAME '[' LITERAL . LITERAL ']'

    LITERAL  shift, and go to state 46


State 33

   26 vars: VAR_NAME . vars
   27     | VAR_NAME .

    VAR_NAME  shift, and go to state 33

    LEFT_ASSIGN  reduce using rule 27 (vars)
    LEFT_ASSIGN  [reduce using rule 28 (vars)]
    $default     reduce using rule 27 (vars)

    vars  go to state 47


State 34

    3 simple_statement: VAR_TYPE VAR_NAME vars . LEFT_ASSIGN operand

    LEFT_ASSIGN  shift, and go to state 48


State 35

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE . VAR_NAME LEFT_ASSIGN operand

    VAR_NAME  shift, and go to state 49


State 36

    7 simple_statement: '$' VAR_NAME '[' . LITERAL LITERAL ']'

    LITERAL  shift, and go to state 50


State 37

   19 expr_operand: VAR_NAME '[' . LITERAL LITERAL ']'

    LITERAL  shift, and go to state 51


State 38

   25 expr: '(' expr ')' .

    $default  reduce using rule 25 (expr)


State 39

    9 assign_expr: operand LEFT_ASSIGN assign_expr .

    $default  reduce using rule 9 (assign_expr)


State 40

   10 assign_expr: operand RIGHT_ASSIGN assign_expr .

    $default  reduce using rule 10 (assign_expr)


State 41

   21 expr: expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '+' expr
   23     | expr '+' expr .
   24     | expr . '-' expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 23 (expr)


State 42

   21 expr: expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '+' expr
   24     | expr . '-' expr
   24     | expr '-' expr .

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 24 (expr)


State 43

   21 expr: expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '+' expr
   24     | expr . '-' expr

    $default  reduce using rule 21 (expr)


State 44

   21 expr: expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '+' expr
   24     | expr . '-' expr

    $default  reduce using rule 22 (expr)


State 45

    1 complex_statement: simple_statement ',' complex_statement .

    $default  reduce using rule 1 (complex_statement)


State 46

   14 operand: VAR_NAME '[' LITERAL LITERAL . ']'
   19 expr_operand: VAR_NAME '[' LITERAL LITERAL . ']'

    ']'  shift, and go to state 52


State 47

   26 vars: VAR_NAME vars .

    $default  reduce using rule 26 (vars)


State 48

    3 simple_statement: VAR_TYPE VAR_NAME vars LEFT_ASSIGN . operand

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    operand          go to state 53
    numeric_operand  go to state 9
    expr             go to state 10
    expr_operand     go to state 11


State 49

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE VAR_NAME . LEFT_ASSIGN operand

    LEFT_ASSIGN  shift, and go to state 54


State 50

    7 simple_statement: '$' VAR_NAME '[' LITERAL . LITERAL ']'

    LITERAL  shift, and go to state 55


State 51

   19 expr_operand: VAR_NAME '[' LITERAL . LITERAL ']'

    LITERAL  shift, and go to state 56


State 52

   14 operand: VAR_NAME '[' LITERAL LITERAL ']' .
   19 expr_operand: VAR_NAME '[' LITERAL LITERAL ']' .

    '+'           reduce using rule 19 (expr_operand)
    '-'           reduce using rule 19 (expr_operand)
    '*'           reduce using rule 19 (expr_operand)
    '/'           reduce using rule 19 (expr_operand)
    LEFT_ASSIGN   reduce using rule 14 (operand)
    LEFT_ASSIGN   [reduce using rule 19 (expr_operand)]
    RIGHT_ASSIGN  reduce using rule 14 (operand)
    RIGHT_ASSIGN  [reduce using rule 19 (expr_operand)]
    ','           reduce using rule 14 (operand)
    ','           [reduce using rule 19 (expr_operand)]
    '.'           reduce using rule 14 (operand)
    '.'           [reduce using rule 19 (expr_operand)]
    $default      reduce using rule 14 (operand)


State 53

    3 simple_statement: VAR_TYPE VAR_NAME vars LEFT_ASSIGN operand .

    $default  reduce using rule 3 (simple_statement)


State 54

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN . operand

    VAR_NAME  shift, and go to state 1
    LITERAL   shift, and go to state 2
    '('       shift, and go to state 7

    operand          go to state 57
    numeric_operand  go to state 9
    expr             go to state 10
    expr_operand     go to state 11


State 55

    7 simple_statement: '$' VAR_NAME '[' LITERAL LITERAL . ']'

    ']'  shift, and go to state 58


State 56

   19 expr_operand: VAR_NAME '[' LITERAL LITERAL . ']'

    ']'  shift, and go to state 59


State 57

    4 simple_statement: ARRAY VAR_TYPE VAR_TYPE VAR_NAME LEFT_ASSIGN operand .

    $default  reduce using rule 4 (simple_statement)


State 58

    7 simple_statement: '$' VAR_NAME '[' LITERAL LITERAL ']' .

    $default  reduce using rule 7 (simple_statement)


State 59

   19 expr_operand: VAR_NAME '[' LITERAL LITERAL ']' .

    $default  reduce using rule 19 (expr_operand)
